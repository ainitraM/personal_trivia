// schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_POSTGRES_URL") // uses connection pooling
  directUrl = env("POSTGRES_PRISMA_POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model Trivia {
  id        String   @id @default(cuid())
  trivia    String
  createdAt DateTime @default(now()) @map(name: "created_at")
  updatedAt DateTime @updatedAt @map(name: "updated_at")
  author    User     @relation(fields: [authorId], references: [id])
  authorId  String
}

model User {
  id        String     @id @default(cuid())
  name      String     @unique
  nickname  String?
  avatar    String?
  password  String
  createdAt DateTime   @default(now()) @map(name: "created_at")
  updatedAt DateTime   @updatedAt @map(name: "updated_at")
  trivia    Trivia[]
  hostedRooms GameRoom[] @relation("HostedRooms")
  joinedRooms GameRoom[] @relation("PlayerInGameRooms")
}

model GameRoom {
  id          String   @id @default(cuid())
  code        String   @unique
  createdAt   DateTime @default(now()) @map(name: "created_at")
  updatedAt   DateTime @updatedAt @map(name: "updated_at")
  host        User     @relation("HostedRooms", fields: [hostId], references: [id], onDelete: Cascade)
  hostId      String
  gameStarted Boolean  @default(false)
  players     User[]   @relation("PlayerInGameRooms")
}
